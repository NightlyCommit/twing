const Twing = require('../../../lib/twing');

const tap = require('tap');
const path = require('path');

tap.test('Twing library', function (test) {
    let exports = {
        abs: './twing/helper/abs',
        asort: './twing/helper/asort',
        chunk: './twing/helper/chunk',
        clone: './twing/helper/clone',
        compare: './twing/helper/compare',
        compareToArray: './twing/helper/compare-to-array',
        compareToNumber: './twing/helper/compare-to-number',
        compareToString: './twing/helper/compare-to-string',
        compareToBoolean: './twing/helper/compare-to-boolean',
        compareToDateTime: './twing/helper/compare-to-date-time',
        compareToNull: './twing/helper/compare-to-null',
        count: './twing/helper/count',
        each: './twing/helper/each',
        fill: './twing/helper/fill',
        first: './twing/helper/first',
        formatDuration: './twing/helper/format-duration',
        formatDateTime: './twing/helper/format-date-time',
        iconv: './twing/helper/iconv',
        includes: './twing/helper/includes',
        isCountable: './twing/helper/is-countable',
        isTraversable: './twing/helper/is-traversable',
        iteratorToArray: './twing/helper/iterator-to-array',
        iteratorToHash: './twing/helper/iterator-to-hash',
        iteratorToMap: './twing/helper/iterator-to-map',
        join: './twing/helper/join',
        jsonEncode: './twing/helper/json-encode',
        ksort: './twing/helper/ksort',
        max: './twing/helper/max',
        merge: './twing/helper/merge',
        min: './twing/helper/min',
        push: './twing/helper/push',
        range: './twing/helper/range',
        regexParser: './twing/helper/regex-parser',
        relativeDate: './twing/helper/relative-date',
        reverse: './twing/helper/reverse',
        slice: './twing/helper/slice',
        TwingBaseNodeVisitor: './twing/base-node-visitor',
        TwingCacheFilesystem: './twing/cache/filesystem',
        TwingCacheNull: './twing/cache/null',
        TwingCompiler: './twing/compiler',
        TwingEnvironment: './twing/environment',
        TwingError: './twing/error',
        TwingErrorLoader: './twing/error/loader',
        TwingErrorRuntime: './twing/error/runtime',
        TwingErrorSyntax: './twing/error/syntax',
        TwingExpressionParser: './twing/expression-parser',
        TwingExtension: './twing/extension',
        TwingExtensionCore: './twing/extension/core',
        TwingExtensionDebug: './twing/extension/debug',
        TwingExtensionEscaper: './twing/extension/escaper',
        TwingExtensionOptimizer: './twing/extension/optimizer',
        TwingExtensionProfiler: './twing/extension/profiler',
        TwingExtensionSandbox: './twing/extension/sandbox',
        TwingExtensionSet: './twing/extension-set',
        TwingExtensionStaging: './twing/extension/staging',
        TwingExtensionStringLoader: './twing/extension/string-loader',
        TwingFileExtensionEscapingStrategy: './twing/file-extension-escaping-strategy',
        TwingFilter: './twing/filter',
        TwingFunction: './twing/function',
        TwingLexer: './twing/lexer',
        TwingLoaderArray: './twing/loader/array',
        TwingLoaderChain: './twing/loader/chain',
        TwingLoaderFilesystem: './twing/loader/filesystem',
        TwingMarkup: './twing/markup',
        TwingNode: './twing/node',
        TwingNodeAutoEscape: './twing/node/auto-escape',
        TwingNodeBlock: './twing/node/block',
        TwingNodeBlockReference: './twing/node/block-reference',
        TwingNodeBody: './twing/node/body',
        TwingNodeCheckSecurity: './twing/node/check-security',
        TwingNodeDo: './twing/node/do',
        TwingNodeEmbed: './twing/node/embed',
        TwingNodeExpression: './twing/node/expression',
        TwingNodeExpressionArray: './twing/node/expression/array',
        TwingNodeExpressionAssignName: './twing/node/expression/assign-name',
        TwingNodeExpressionBinary: './twing/node/expression/binary',
        TwingNodeExpressionBinaryAdd: './twing/node/expression/binary/add',
        TwingNodeExpressionBinaryAnd: './twing/node/expression/binary/and',
        TwingNodeExpressionBinaryBitwiseAnd: './twing/node/expression/binary/bitwise-and',
        TwingNodeExpressionBinaryBitwiseOr: './twing/node/expression/binary/bitwise-or',
        TwingNodeExpressionBinaryBitwiseXor: './twing/node/expression/binary/bitwise-xor',
        TwingNodeExpressionBinaryConcat: './twing/node/expression/binary/concat',
        TwingNodeExpressionBinaryDiv: './twing/node/expression/binary/div',
        TwingNodeExpressionBinaryEndsWith: './twing/node/expression/binary/ends-with',
        TwingNodeExpressionBinaryEqual: './twing/node/expression/binary/equal',
        TwingNodeExpressionBinaryFloorDiv: './twing/node/expression/binary/floor-div',
        TwingNodeExpressionBinaryGreater: './twing/node/expression/binary/greater',
        TwingNodeExpressionBinaryGreaterEqual: './twing/node/expression/binary/greater-equal',
        TwingNodeExpressionBinaryIn: './twing/node/expression/binary/in',
        TwingNodeExpressionBinaryLess: './twing/node/expression/binary/less',
        TwingNodeExpressionBinaryLessEqual: './twing/node/expression/binary/less-equal',
        TwingNodeExpressionBinaryMatches: './twing/node/expression/binary/matches',
        TwingNodeExpressionBinaryMod: './twing/node/expression/binary/mod',
        TwingNodeExpressionBinaryMul: './twing/node/expression/binary/mul',
        TwingNodeExpressionBinaryNotEqual: './twing/node/expression/binary/not-equal',
        TwingNodeExpressionBinaryNotIn: './twing/node/expression/binary/not-in',
        TwingNodeExpressionBinaryOr: './twing/node/expression/binary/or',
        TwingNodeExpressionBinaryPower: './twing/node/expression/binary/power',
        TwingNodeExpressionBinaryRange: './twing/node/expression/binary/range',
        TwingNodeExpressionBinaryStartsWith: './twing/node/expression/binary/starts-with',
        TwingNodeExpressionBinarySub: './twing/node/expression/binary/sub',
        TwingNodeExpressionBlockReference: './twing/node/expression/block-reference',
        TwingNodeExpressionCall: './twing/node/expression/call',
        TwingNodeExpressionConditional: './twing/node/expression/conditional',
        TwingNodeExpressionConstant: './twing/node/expression/constant',
        TwingNodeExpressionFilter: './twing/node/expression/filter',
        TwingNodeExpressionFilterDefault: './twing/node/expression/filter/default',
        TwingNodeExpressionFunction: './twing/node/expression/function',
        TwingNodeExpressionGetAttr: './twing/node/expression/get-attr',
        TwingNodeExpressionHash: './twing/node/expression/hash',
        TwingNodeExpressionMethodCall: './twing/node/expression/method-call',
        TwingNodeExpressionName: './twing/node/expression/name',
        TwingNodeExpressionNullCoalesce: './twing/node/expression/null-coalesce',
        TwingNodeExpressionParent: './twing/node/expression/parent',
        TwingNodeExpressionTest: './twing/node/expression/test',
        TwingNodeExpressionTestConstant: './twing/node/expression/test/constant',
        TwingNodeExpressionTestDefined: './twing/node/expression/test/defined',
        TwingNodeExpressionTestDivisibleBy: './twing/node/expression/test/divisible-by',
        TwingNodeExpressionTestEven: './twing/node/expression/test/even',
        TwingNodeExpressionTestNull: './twing/node/expression/test/null',
        TwingNodeExpressionTestOdd: './twing/node/expression/test/odd',
        TwingNodeExpressionTestSameAs: './twing/node/expression/test/same-as',
        TwingNodeExpressionUnary: './twing/node/expression/unary',
        TwingNodeExpressionUnaryNeg: './twing/node/expression/unary/neg',
        TwingNodeExpressionUnaryNot: './twing/node/expression/unary/not',
        TwingNodeExpressionUnaryPos: './twing/node/expression/unary/pos',
        TwingNodeFlush: './twing/node/flush',
        TwingNodeFor: './twing/node/for',
        TwingNodeForLoop: './twing/node/for-loop',
        TwingNodeIf: './twing/node/if',
        TwingNodeImport: './twing/node/import',
        TwingNodeInclude: './twing/node/include',
        TwingNodeMacro: './twing/node/macro',
        TwingNodeModule: './twing/node/module',
        TwingNodePrint: './twing/node/print',
        TwingNodeSandbox: './twing/node/sandbox',
        TwingNodeSandboxedPrint: './twing/node/sandboxed-print',
        TwingNodeSet: './twing/node/set',
        TwingNodeSpaceless: './twing/node/spaceless',
        TwingNodeText: './twing/node/text',
        TwingNodeTraverser: './twing/node-traverser',
        TwingNodeVisitorEscaper: './twing/node-visitor/escaper',
        TwingNodeVisitorOptimizer: './twing/node-visitor/optimizer',
        TwingNodeVisitorSafeAnalysis: './twing/node-visitor/safe-analysis',
        TwingNodeVisitorSandbox: './twing/node-visitor/sandbox',
        TwingNodeWith: './twing/node/with',
        TwingOutputBuffering: './twing/output-buffering',
        TwingOutputHandler: './twing/output-buffering',
        TwingParser: './twing/parser',
        TwingProfilerDumperBase: './twing/profiler/dumper/base',
        TwingProfilerDumperBlackfire: './twing/profiler/dumper/blackfire',
        TwingProfilerDumperHtml: './twing/profiler/dumper/html',
        TwingProfilerDumperText: './twing/profiler/dumper/text',
        TwingProfilerNodeEnterProfile: './twing/profiler/node/enter-profile',
        TwingProfilerNodeLeaveProfile: './twing/profiler/node/leave-profile',
        TwingProfilerNodeVisitorProfiler: './twing/profiler/node-visitor/profiler',
        TwingProfilerProfile: './twing/profiler/profile',
        TwingReflectionMethod: './twing/reflection-method',
        TwingReflectionParameter: './twing/reflection-parameter',
        TwingRuntimeLoaderInterface: './twing/runtime-loader-interface',
        TwingSandboxSecurityError: './twing/sandbox/security-error',
        TwingSandboxSecurityNotAllowedFilterError: './twing/sandbox/security-not-allowed-filter-error',
        TwingSandboxSecurityNotAllowedFunctionError: './twing/sandbox/security-not-allowed-function-error',
        TwingSandboxSecurityNotAllowedTagError: './twing/sandbox/security-not-allowed-tag-error',
        TwingSandboxSecurityPolicy: './twing/sandbox/security-policy',
        TwingSource: './twing/source',
        TwingTemplate: './twing/template',
        TwingTemplateWrapper: './twing/template-wrapper',
        TwingTest: './twing/test',
        TwingTokenParser: './twing/token-parser',
        TwingTokenParserAutoEscape: './twing/token-parser/auto-escape',
        TwingTokenParserBlock: './twing/token-parser/block',
        TwingTokenParserDo: './twing/token-parser/do',
        TwingTokenParserEmbed: './twing/token-parser/embed',
        TwingTokenParserExtends: './twing/token-parser/extends',
        TwingTokenParserFilter: './twing/token-parser/filter',
        TwingTokenParserFlush: './twing/token-parser/flush',
        TwingTokenParserFor: './twing/token-parser/for',
        TwingTokenParserFrom: './twing/token-parser/from',
        TwingTokenParserIf: './twing/token-parser/if',
        TwingTokenParserImport: './twing/token-parser/import',
        TwingTokenParserInclude: './twing/token-parser/include',
        TwingTokenParserMacro: './twing/token-parser/macro',
        TwingTokenParserSandbox: './twing/token-parser/sandbox',
        TwingTokenParserSet: './twing/token-parser/set',
        TwingTokenParserSpaceless: './twing/token-parser/spaceless',
        TwingTokenParserUse: './twing/token-parser/use',
        TwingTokenParserWith: './twing/token-parser/with',
        TwingTokenStream: './twing/token-stream',
        varDump: './twing/helper/var-dump'
    };

    for (let key in exports) {
        let fileName = exports[key];

        let exportedSymbol = require(path.resolve('lib', fileName))[key];

        try {
            test.same(exportedSymbol.toString(), Twing[key].toString(), `${key} is exported`);
        }
        catch (e) {
            console.warn(key);
        }
    }

    for (let key in Twing) {
        test.true(exports[key], `${key} is legit`);
    }


    test.end();
});